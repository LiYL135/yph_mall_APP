<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace = 接口的全限定符 -->
<mapper namespace="com.lyl.yph.manager.mapper.CategoryBrandMapper">

    <resultMap id="categoryBrandMap" type="com.lyl.yph.model.entity.product.CategoryBrand" autoMapping="true">
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        id,brand_id,category_id,create_time,update_time,is_deleted
    </sql>

    <sql id="findPageWhere">
        <where>
            <if test="brandId != null and brandId != ''">
                and cb.brand_id = #{brandId}
            </if>
            <if test="categoryId != null and categoryId != ''">
                and cb.category_id = #{categoryId}
            </if>
            and cb.is_deleted = 0
        </where>
    </sql>

    <!--分页查询分类品牌关系信息-->
    <select id="findByPage" resultMap="categoryBrandMap">
        select
            cb.id,cb.brand_id,cb.category_id,cb.create_time,cb.update_time,
            c.name as categoryName,
            b.name as brandName, b.logo
        from
            category_brand cb
        left join
            category c
        on
            c.id = cb.category_id
        left join
            brand b
        on
            b.id = cb.brand_id
        <include refid="findPageWhere"/>
        order by cb.id desc
    </select>

    <!--添加功能-->
    <insert id="save">
        insert into
            category_brand (
            id, brand_id, category_id, create_time, update_time , is_deleted )
        values (
            #{id}, #{brandId}, #{categoryId}, now(), now(), 0 )
    </insert>

    <!--修改功能-->
    <update id="updateById" >
        update
            category_brand
        set
            <if test="brandId != null and brandId != ''">
                brand_id = #{brandId},
            </if>
            <if test="categoryId != null and categoryId != ''">
                category_id = #{categoryId},
            </if>
            update_time =  now()
        where
            id = #{id}
    </update>

    <!--删除功能-->
    <update id="deleteById">
        update
            category_brand
        set
            update_time = now() ,
            is_deleted = 1
        where
            id = #{id}
    </update>

    <resultMap id="brandMap" type="com.lyl.yph.model.entity.product.Brand" autoMapping="true"></resultMap>
    <!--根据分类id获取对应的品牌数据-->
    <select id="findBrandByCategoryId" resultMap="brandMap">
        select
            b.*
        from
            category_brand cb
        left join
            brand b
        on
            b.id = cb.brand_id
        where
            cb.category_id = #{categoryId} and cb.is_deleted = 0
        order by
            cb.id
        desc
    </select>

</mapper>